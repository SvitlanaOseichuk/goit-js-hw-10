{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\n\n\nconst startBtn = document.querySelector(\"button\");\n\nconst daysElement = document.querySelector(\"[data-days]\");\nconst hoursElement = document.querySelector(\"[data-hours]\");\nconst minutesElement = document.querySelector(\"[data-minutes]\");\nconst secondsElement = document.querySelector(\"[data-seconds]\");\n\nconst currentDate = new Date();\n\nlet userSelectedDate; \n\n\nfunction addLeadingZero(value) {\n    return value.toString().padStart(2, '0');\n  }\n\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  };\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n\n      if (selectedDates) {\n\n        userSelectedDate = selectedDates[0];\n\n        if (userSelectedDate < currentDate ) {\n\n            iziToast.show({\n                message: \"Please choose a date in the future\"\n            });\n\n            startBtn.disabled = true;// старт не була активною\n        } else {\n            startBtn.disabled = false;// старт стає активною\n        }\n      }\n    },\n  };\n\n  flatpickr(\"input#datetime-picker\", options);\n\n\n  startBtn.addEventListener(\"click\", () => {\n\nconsole.log(\"відлік почався\")\n\n    startBtn.disabled = true;\n\n    const intervalId = setInterval(() => {\n    const currentDate = new Date();\n    const ms = userSelectedDate - currentDate;\n    \n     // Перевірка чи час ще не вийшов\n    if (ms <= 0) {\n        clearInterval(intervalId);\n        startBtn.disabled = true;\n          return;\n        }\n    \n        const { days, hours, minutes, seconds } = convertMs(ms);\n\n        daysElement.textContent = addLeadingZero(days);\n        hoursElement.textContent = addLeadingZero(hours);\n        minutesElement.textContent = addLeadingZero(minutes);\n        secondsElement.textContent = addLeadingZero(seconds);\n      }, 1000);\n    \n      setTimeout(() => {\n        clearInterval(intervalId);\n        startBtn.disabled = true;\n      }, userSelectedDate - new Date());\n    });\n    \n \n   \n\n\n\n\n// startBtn.addEventListener(\"click\", () => {\n//   // Перевірка, чи обрано дату\n//   if (!userSelectedDate) {\n//     iziToast.show({\n//       message: \"Please choose a date first\",\n//     });\n//     return;\n//   }\n\n\n//   const intervalId = setInterval(() => {\n//     const currentDate = new Date();\n//     const ms = userSelectedDate - currentDate;\n\n    // // Перевірка, чи час ще не вийшов\n    \n    // if (ms <= 0) {\n    //   clearInterval(intervalId);\n    //   startBtn.disabled = true;\n    //   return;\n    // }\n\n//     const { days, hours, minutes, seconds } = convertMs(ms);\n\n//     \n//     daysElement.textContent = padWithZero(days);\n//     hoursElement.textContent = padWithZero(hours);\n//     minutesElement.textContent = padWithZero(minutes);\n//     secondsElement.textContent = padWithZero(seconds);\n//   }, 1000);\n\n\n//   setTimeout(() => {\n//     clearInterval(intervalId);\n//     startBtn.disabled = true;\n//   }, userSelectedDate - new Date());\n// });\n\n\n"],"names":["startBtn","daysElement","hoursElement","minutesElement","secondsElement","currentDate","userSelectedDate","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","options","selectedDates","iziToast","flatpickr","intervalId"],"mappings":"+IAQA,MAAMA,EAAW,SAAS,cAAc,QAAQ,EAE1CC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAExDC,EAAc,IAAI,KAExB,IAAIC,EAGJ,SAASC,EAAeC,EAAO,CAC3B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACxC,CAGH,SAASC,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAE1C,CACA,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAEjBA,IAEFV,EAAmBU,EAAc,GAE7BV,EAAmBD,GAEnBY,EAAS,KAAK,CACV,QAAS,oCACzB,CAAa,EAEDjB,EAAS,SAAW,IAEpBA,EAAS,SAAW,GAG3B,CACL,EAEEkB,EAAU,wBAAyBH,CAAO,EAG1Cf,EAAS,iBAAiB,QAAS,IAAM,CAE3C,QAAQ,IAAI,gBAAgB,EAExBA,EAAS,SAAW,GAEpB,MAAMmB,EAAa,YAAY,IAAM,CACrC,MAAMd,EAAc,IAAI,KAClBK,EAAKJ,EAAmBD,EAG9B,GAAIK,GAAM,EAAG,CACT,cAAcS,CAAU,EACxBnB,EAAS,SAAW,GAClB,MACD,CAED,KAAM,CAAE,KAAAW,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EAEtDT,EAAY,YAAcM,EAAeI,CAAI,EAC7CT,EAAa,YAAcK,EAAeK,CAAK,EAC/CT,EAAe,YAAcI,EAAeM,CAAO,EACnDT,EAAe,YAAcG,EAAeO,CAAO,CACpD,EAAE,GAAI,EAEP,WAAW,IAAM,CACf,cAAcK,CAAU,EACxBnB,EAAS,SAAW,EAC5B,EAASM,EAAmB,IAAI,IAAM,CACtC,CAAK"}